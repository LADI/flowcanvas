#!/usr/bin/env python
import autowaf
import os
import glob

# Version of this package (even if built as a child)
REDLANDMM_VERSION = '0.0.0'
REDLANDMM_LIB_VERSION = '0.0.0'

# Variables for 'waf dist'
VERSION = REDLANDMM_VERSION
APPNAME = 'redlandmm'

# Mandatory variables
top = '.'
out = 'build'

def options(opt):
	autowaf.set_options(opt)

def configure(conf):
	autowaf.configure(conf)
	autowaf.display_header('Redlandmm Configuration')
	conf.check_tool('compiler_cxx')
	autowaf.check_pkg(conf, 'glibmm-2.4', uselib_store='GLIBMM', atleast_version='2.14.0', mandatory=True)
	autowaf.check_pkg(conf, 'gthread-2.0', uselib_store='GTHREAD', atleast_version='2.14.0', mandatory=True)
	autowaf.check_pkg(conf, 'raptor', uselib_store='RAPTOR', atleast_version='1.4.18', mandatory=True)
	autowaf.check_pkg(conf, 'redland', uselib_store='REDLAND', atleast_version='1.0.8', mandatory=True)
	print

def build(bld):
	# Headers
	bld.install_files('${INCLUDEDIR}/redlandmm', bld.path.ant_glob('redlandmm/*.hpp'))

	# Pkgconfig file
	autowaf.build_pc(bld, 'REDLANDMM', REDLANDMM_VERSION, 'GLIBMM GTHREAD REDLAND')

	# Library
	obj = bld(features = 'cxx cxxshlib')
	obj.source = '''
		src/Model.cpp
		src/Namespaces.cpp
		src/Node.cpp
		src/Query.cpp
		src/World.cpp
	'''
	obj.export_includes = ['.']
	obj.includes = ['.', './src']
	obj.name     = 'libredlandmm'
	obj.target   = 'redlandmm'
	obj.uselib   = 'REDLAND GLIBMM GTHREAD'
	obj.vnum     = REDLANDMM_LIB_VERSION
	obj.install_path = '${LIBDIR}'

	# Unit tests
	obj = bld(features = 'cxx cxxprogram')
	obj.source       = 'tests/rdf_test.cpp'
	obj.includes     = ['.', './src']
	obj.use          = 'libredlandmm'
	obj.target       = 'tests/rdf_test'
	obj.install_path = ''
	
	# Utilities
	utils = 'utils/rdf_diff'
	for i in utils.split():
		obj = bld(features = 'cxx cxxprogram')
		obj.source       = i + '.cpp'
		obj.includes     = ['.']
		obj.use          = 'libredlandmm'
		obj.target       = i
		obj.install_path = '${BINDIR}'

	# Documentation
	autowaf.build_dox(bld, 'REDLANDMM', REDLANDMM_VERSION, top, out)

	bld.add_post_fun(autowaf.run_ldconfig)
