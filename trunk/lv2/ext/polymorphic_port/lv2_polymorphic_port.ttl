# LV2 Polymorphic Port Extension
# Copyright (C) 2008 Dave Robillard <dave@drobilla.net>
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

@prefix :      <http://lv2plug.in/ns/ext/polymorphic-port#> .
@prefix lv2:   <http://lv2plug.in/ns/lv2core#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix doap:  <http://usefulinc.com/ns/doap#> .
@prefix foaf:  <http://xmlns.com/foaf/0.1/> .

<http://lv2plug.in/ns/ext/polymorphic-port> a lv2:Specification ;
	doap:license <http://usefulinc.com/doap/licenses/mit> ;
	doap:name "LV2 Polymorphic Ports" ;
	rdfs:comment "Defines LV2 ports which can dynamically change type" ;
	doap:maintainer [
		a foaf:Person ;
		foaf:name "Dave Robillard" ;
		foaf:homepage <http://drobilla.net/> ;
		rdfs:seeAlso <http://drobilla.net/drobilla.rdf>
	] .


:PolymorphicPort a rdfs:Class ;
    rdfs:label      "Polymorphic port" ;
    rdfs:subClassOf lv2:Port ;
    rdfs:comment    """
Ports of this type contain a struct of type LV2_Polymorphic_Buffer,
defined in <lv2_polymorphic_port.h>.  These ports contain a pointer
and a uint32_t type field which is a URI mapped to an integer (using the
LV2 URI Map extension) which describes the type of data pointed to.

Hosts MUST obey the following rules in order to instantiate a plugin
with polymorphic ports:

  * When connecting polymorphic ports to buffers, the type field of that
    buffer MUST be set appropriately.  The type field of a buffer MUST NOT
    be changed at any other time (i.e. if the type is changed connect_port
    MUST be called to notify the port of the change, even if the port is
	connected to the same LV2_Polymorphic_Buffer)

  * When connecting output polymorphic ports, the type field MAY be set
    to 0 to indicate the plugin may produce any (supported) type based
    on the types of its inputs.  The plugin MUST then set the type field
    to the type it has chosen.  Otherwise, the type field MUST be set to
    the host expects to receive from the plugin.  If a port is :generic
    but a plugin cannot produce the requested output type, the plugin
    MUST set the type field to 0.  The host MUST check for this situation
    when connecting any :generic port to a buffer with a type not explicitly
    listed as supported by the port with :supportsType.
""" .

:generic a lv2:PortProperty ;
	rdfs:label "Generic polymorphic port" ;
	rdfs:comment """
Indicates that this port can be connected to a buffer of any type.
""" .

:supportsType a rdf:Property ;
	rdfs:domain  lv2:Port ;
    rdfs:label   "Supports data type" ;
    rdfs:comment """
Indicates that this port supports or "understands" a certain data type.
Hosts MUST NOT connect a port to a buffer unless the port is :generic,
or is described as supporting the type of that buffer with this property.
""" .

